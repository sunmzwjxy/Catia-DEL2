//===================================================================
// COPYRIGHT comac 2021/03/30
//===================================================================
// fengyHelper.cpp
// Header definition of class fengyHelper
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2021/03/30 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef fengyHelper_H
#define fengyHelper_H

#include "AttributeUtilities.h"
#include "CATUnicodeString.h"
#include "CATListOfCATUnicodeString.h"

//CATMecModLiveUseItf Interface 
#include "CATIMmiUsePrtPart.h"
#include "CATIGSMTool.h"    
#include "CATIMmiMechanicalFeature.h"
#include "CATLISTV_CATIMmiMechanicalFeature.h"

//CATMecModLiveUseItf Interface 
#include "CATIPartRequest.h"

//KnowledgeInterfaces Collection 
#include "CATListValCATICkeParm.h"

// CATPLMComponentInterfaces
#include "CATIPLMNavReference.h"
#include "CATIPLMNavInstance.h"
#include "CATIPLMNavRepReference.h"
#include "CATIPLMNavEntity.h"

#include "CATIMmiUseDatumFactory.h"
//Dialog Framework
#include "CATDlgDialog.h"
#include "CATDlgInclude.h"

//CreateClashSimulation
#include "PLMIInterferenceSimulation.h"
#include <vector>

//CString
#include <afx.h>

//ObjectModelerBase class 
#include "CATOmbLifeCycleRootsBag.h"

#include "CATIAdpPLMIdentificator.h"


// 组合 
#include "CATIPLMNavOccurrence.h"
#include "CATListPtrCATIPLMNavOccurrence.h"
#include "CATFrmEditor.h"
#include "CATIPLMNavInstance.h"
#include "CATListPtrCATIPLMNavRepOccurrence.h"
#include "CATIPLMNavRepOccurrence.h"


class CATDocument;
class CATIEditor;
class CATPathElement;
class CATFeatureImportAgent;

//ObjectModelerNavigator 
class CATNavigController;

//CATPLMIdentificationAccess Interface 
class CATIPLMComponent;

#include "CATAdpVersioningServices.h"

using namespace std;
//-----------------------------------------------------------------------

class ExportedByAttributeUtilities fengyHelper
{
	//	ExportedByAttributeUtilities  // module name！
	//public:
	//	struct  CalshResultInfom
	//	{
	//		CATListOfCATUnicodeString        & strOccurr1Alias;
	//		CATListOfCATUnicodeString        & strOccurr2Alias;
	//		CATListOfCATUnicodeString        & strType;
	//		CATListOfCATUnicodeString        & MathPoint1Str;
	//		CATListOfCATUnicodeString        & MathPoint2Str;
	//		CATListOfCATUnicodeString        & MinDisStr;
	//	};
public:

	// Standard constructors and destructors
	// -------------------------------------
	fengyHelper();
	virtual ~fengyHelper();


	static void Notify(CATUnicodeString iMsg, CATUnicodeString iTitle = "Inform");

	// iStyle: CATDlgNfyOKCancel、 CATDlgNfyError 、CATDlgNfyWarning
	static void NotifyWithStyle(CATUnicodeString Msg, CATUnicodeString DlgTitle, CATDlgStyle iStyle = CATDlgNfyOK);

	// 等待提示按钮的 确认回调函数  2021.4.7 fengy
	static void NotifyWithOpen(CATUnicodeString iMessage, CATUnicodeString ifilePath, CATDlgStyle iStyle = CATDlgNfyOKCancel);

	// 2021.12.22  fengy   Notify 提醒继续与否！
	static void NotifyYesOrNO(CATString isTitle, CATUnicodeString iMessage, bool & oToContinue, CATDlgStyle iStyle = CATDlgNfyOKCancel);

	static void GetObjTitle(CATBaseUnknown * ipBaseUnknown, CATUnicodeString & ioAliasString);

	static void SetObjTitle(CATBaseUnknown_var ispObj, CATUnicodeString usTitle);

	static HRESULT GetPLMComponentAttr(CATIPLMNavEntity* ipiNavEntity, CATListOfCATUnicodeString & oAttrNameList, CATListOfCATUnicodeString & oAttrValueList);

	// part - cont-fact -geoset
	static HRESULT CreateTool(CATIMmiUsePrtPart_var spPrtPart, CATIGSMTool_var & iospGsmTool, CATUnicodeString iToolName);
	static HRESULT AppendContentToFile(CATUnicodeString strFilePath, CATUnicodeString strContent);

	// 获取根节点对应的 CATIPLMNavReference_var
	static HRESULT GetRootReference(CATIPLMNavReference_var & iospRootReference);
	// 显示/隐藏特征
	static HRESULT ShowOrHideFeature(CATBaseUnknown_var ispFeature, CATBoolean iShow);

	static void    UpdateFeature(CATBaseUnknown_var spObj);

	static HRESULT UpdateFeature(CATIMmiMechanicalFeature_var ispMmiMechanicalFeature, CATBoolean IfInsertInProceduralView);
	// 更新显示 特征
	static void	   UpdateObject(CATBaseUnknown_var ispUKObject);

	// 搭配使用获取  当前 module 下的 dll Path
	static HMODULE  GetCurrentModuleHandle();
	static HRESULT  GetCurrentDLLPath(CATUnicodeString & ostrDLLPath);

	static HRESULT  CreateDir(CATUnicodeString & istrDir);
	static void		GetCurrentTimeStr(CATUnicodeString & ologTime);

	static HRESULT  CreateClashSimulation(CATIPLMNavReference_var  & ispRootReference,
		CATUnicodeString	 & ioSimuNameStr,
		PLMIInterferenceSimulation *& opiItfSimu,
		double  iClearanceValue = 10.0);
	//static HRESULT  GetClashResult(PLMIInterferenceSimulation * ipiItfSimu, struct  CalshResultInfom       oResultInfo);
	static CATUnicodeString AddSuffix(int i);

	static HRESULT  GetClashResult(PLMIInterferenceSimulation * ipiItfSimu,
		CATListOfCATUnicodeString        & ostrOccurr1Alias,
		CATListOfCATUnicodeString        & ostrOccurr2Alias,
		CATListOfCATUnicodeString        & ostrType,
		CATListOfCATUnicodeString        & oMathPoint1Str,
		CATListOfCATUnicodeString        & oMathPoint2Str,
		CATListOfCATUnicodeString        & oMinDisStr);
	static HRESULT  CreateExcelFile(CATUnicodeString &istrfileName,
		CATListOfCATUnicodeString        & istrOccurr1Alias,
		CATListOfCATUnicodeString        & istrOccurr2Alias,
		CATListOfCATUnicodeString        & istrType,
		CATListOfCATUnicodeString        & iMathPoint1Str,
		CATListOfCATUnicodeString        & iMathPoint2Str,
		CATListOfCATUnicodeString        & iMinDisStr);
	static HRESULT  CStringToCATUnicodeString(CString ic_strTemp, CATUnicodeString & ostrCAT);

	static HRESULT  CATUnicodeStringToCString(CATUnicodeString & istrCAT, CString oc_strTemp);

	static HRESULT  GetPointedResourceFromDataSetup(CATUnicodeString iustrActionID, CATBaseUnknown_var& ospUKAction);

	static CATBoolean SearchPrdByTitle(CATUnicodeString usTitle, CATOmbLifeCycleRootsBag &ioLifeCycleRootsBag, CATIPLMNavReference_var &ospRefOnSearch, CATUnicodeString  isPLMType = "VPMReference");

	static HRESULT    GetAdpPLMID(CATUnicodeString externalID, CATIAdpPLMIdentificator* &opPLMIdent, CATString imodelerType = "VPMReference");

	static HRESULT    GetObjectType(CATBaseUnknown* ipUKObject, CATUnicodeString& oustrObjectType);

	static HRESULT    SaveAs(CATIAdpPLMIdentificator *ipPLMId, CATUnicodeString  istrPrefix = "");

	// 组合
	static CATIPLMNavOccurrence_var GetRootOcc();

	static void GetCurrentActiveOcc(CATFrmEditor* ipEditor, CATIPLMNavOccurrence_var& oSpiNavOccurrence);

	static CATIPLMNavOccurrence_var GetFartherOcc(CATIPLMNavOccurrence_var spOcc);

	// 获取 external_ID等属性
	static CATUnicodeString GetAttrVlaueFromOcc(CATIPLMNavOccurrence_var ispOcc, CATUnicodeString  ikey = "PLM_ExternalID");

	//  SetAttrVlaueFromOcc  
	static HRESULT SetAttrVlaueFromOcc(CATUnicodeString iusValue, CATIPLMNavOccurrence_var ispOcc, CATUnicodeString  ikey = "PLM_ExternalID");
	static CATUnicodeString GetInsTitle(CATIPLMNavInstance_var ispIns);
	static CATUnicodeString GetInsTitleFromOcc(CATIPLMNavOccurrence_var ispOcc);
	static CATUnicodeString GetRefTitle(CATIPLMNavReference_var ispRef);
	static CATUnicodeString GetRefTitleFromOcc(CATIPLMNavOccurrence_var ispOcc);
	//JD 组合
	//GetRefIdFromOcc
	static CATUnicodeString GetRefIdFromOcc(CATIPLMNavOccurrence_var spOcc);
	//获取RefID号
	static CATUnicodeString GetRefID(const CATIPLMNavReference_var& spRef);
	//由Occ获取Ref，注意返回值的临时性！！
	static CATIPLMNavReference_var GetRefFromOcc(CATIPLMNavOccurrence_var spOcc);

	static CATIPLMNavInstance_var  GetInsFromOcc(CATIPLMNavOccurrence_var spOcc);

	//获取所有子件
	static CATBoolean GetAllChildren(CATIPLMNavOccurrence_var spSelectNode, CATListValCATBaseUnknown_var &listAllChildren, CATBoolean bRecursive = FALSE);

	//Int数字转字符串
	static CATUnicodeString IntToStr(int i);

	//double转字符串
	static CATUnicodeString DoubleToStr(double d);

	//Str->int
	static int Str2Int(CATUnicodeString usStr);

	//Str->double
	static double StrToDouble(CATUnicodeString usStr);


	// JD 嵌套拆分所有标记字符（iStrSplit）！
	static CATBoolean  SplitString(CATUnicodeString iStrString, CATUnicodeString iStrSplit, CATListOfCATUnicodeString &oStrList);

	static CATBoolean GetFeatureFromSelect(CATBaseUnknown_var ispSelect, CATIMmiMechanicalFeature_var &ospSpecOnFeature);

	static HRESULT  GetRepReferenceByOccurrence(CATIPLMNavOccurrence* ipiNavOccurrence, CATIPLMNavRepReference*& opiNavRepReference);
	//HRESULT rc;

	//根据Occ获取PrtContainer   JD CAAEwisGeneralCls.cpp
	static CATBoolean  GetContByOcc(CATIPLMNavOccurrence_var ispOcc, CATIMmiPrtContainer_var &ospPrtCont);

	//转换到编辑模式
	static CATBoolean  ChangeOccModeToEdit(CATIPLMNavOccurrence_var ispOcc);

	// 获取  ParamList  fengy   2021.6.8
	static BOOL  GetParamList(CATIMmiPrtContainer_var ispPrtContainer, CATLISTV(CATICkeParm_var) & ospParmList);

	//  2021.6.9 fengy  提前 判断是否存在文件， 尝试避免打开错误；――针对 CExcelRW::IsFileExist
	static BOOL  IsXlsFileExist(CATUnicodeString istrXlsFile);

	//  2021.6.16 fengy  利用黄玲玲的 excel组件！
	static HRESULT getKnowledgeListsByResourceExcel(CATUnicodeString iExcelFile,
		CATListValCATUnicodeString & oHeadList,
		CATListValCATUnicodeString & oValueList,
		int iupperRow = 3,
		int ileftColumn = 1);
	// 规则 1 ：根据 件号，区分类别

	// 为了简化规则from 液压管路三维化件号编排规则.xlsx，多次复用！ fengy 2021.6.16
	static CATUnicodeString CheckPartType(CATIPLMNavOccurrence_var ispChildOnOcc, CATUnicodeString iPartNumber);

	// 2021.6.16 fengy 判断是否为管路件
	static HRESULT fengyHelper::isTube(CATIPLMNavOccurrence_var ispChildOnOcc);

	// 标准件细分 改编 fengy 2021.6.17
	static CATUnicodeString getDetailTypeFromStandardType(CATUnicodeString & iPartNumber,
		CATListOfCATUnicodeString &iheadList,
		CATListOfCATUnicodeString &itypeList);

	static CATUnicodeString GetAliasName(CATBaseUnknown * ipBaseUnknown);

	//fengy 2021.12.1 根据 ref \ contextFatherOcc 获取Occ 
	static CATIPLMNavOccurrence_var GetOccFromRef(CATIPLMNavOccurrence_var ispOccOnFarther, CATIPLMNavReference_var ispRef);

	// fengy 2021.12.16  010~990 解析
	static int ParseFormatCode(CATUnicodeString isStartingRefTitle);

	// fengy 2021.12.26  从选定 获取当前list 内的index  by PLM_ExternalID
	static int GetCurIdOnMAList(CATUnicodeString istrOPRefID, CATIPLMNavReference_var ispRootSysRef);

	// 2021.12.29 fengy from edu ：E:\00dev\dev_3DE_2020\1_edu\CAAProductStructure_1\CAAProductStructure.edu\CAAPstBrowsingProductModel.m\src\CAAPstBrowsingProductModel.cpp
	static HRESULT BrowseReference(CATIPLMNavReference* ipiNavRef, int iTypeOfBrowsing, CATBoolean iAllAtributes, int iDepth);
	static HRESULT PrintPLMComponent(CATIPLMNavEntity* ipiNavEntity, CATBoolean iALlAttributes, int iDepth);

	// fengy 2022.1.7  CATUnicodeString - const char * -char - int
	static int getAsciiNum(CATUnicodeString istrABC);

	// fengy 2022.1.7    int - char 
	static char getAsciiChar(int i);

	// fengy 2022.1.7    int - char - CATUnicodeString
	static CATUnicodeString getAsciiCATUnicodeString(int i);

	static void ReleasePtr(CATBaseUnknown * piCBU);

	// fengy 2022.1.10  方便遍历打印
	static void printListString(CATListOfCATUnicodeString iListString);

	// fengy 2022.1.10  获取list中 含字符的个数 ByFuzzySearch
	static int getCountByFuzzySearch(CATListOfCATUnicodeString iListString, CATUnicodeString iSearchStr);

	//  fengy 		: 2022.1.14 12:28:27  		Global routine to display error returned by routines !from edu:E:\00dev\dev_3DE_2020\1_edu\CAAProductStructure_1\CAAPLMClientAdapter.edu\CAAAdpVersioning.m\src\CAAAdpVersioning.cpp
	static int DisplayErrorMessage(HRESULT hr, CATUnicodeString RoutineName);

	// from RQ
	static HRESULT SetObjectAttrString(CATBaseUnknown * ipBaseUnknown, CATUnicodeString sAttrName, CATUnicodeString sAttrValue);

	// from RQ
	static CATUnicodeString GetObjectAttrValue(CATBaseUnknown * ipBaseUnknown, CATUnicodeString sAttrName);

	//  fengy 		: 2022.1.14 13:52:30  		from ref to identificator
	static HRESULT  GetRefIdentificator(CATIPLMNavReference *pRef, CATIAdpPLMIdentificator*& opiIDComp);

	//  fengy 		: 2022.1.18 17:05:10  		从 id 到ref 必须打开，处于in session状态！
	static HRESULT  GetRefFromIdentificator(CATIAdpPLMIdentificator*  ipiIDComp, CATIPLMNavReference *& opRef);

	//  fengy 		: 2022.1.18 17:51:25  		
	static int      getMaxcharindexInList(CATListOfCATUnicodeString istrRevList);

	//  fengy 		: 2022.1.18 19:04:27  		以不打开的方式 来获取 最大的版本 idficator
	static HRESULT  GetBigInAllVersions(CATIAdpPLMIdentificator * iIdentificator, CATIAdpPLMIdentificator *&  opiIDComp);
};

//-----------------------------------------------------------------------

#endif
