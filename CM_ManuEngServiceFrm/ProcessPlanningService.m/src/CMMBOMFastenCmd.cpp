//===================================================================
// COPYRIGHT  2021/02/04
//===================================================================
// CMMBOMFastenCmd.cpp
// Header definition of class CMMBOMFastenCmd
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2021/02/04 Creation: Code generated by the 3DS wizard
//===================================================================

#include "CMMBOMFastenCmd.h"
#include "CUSCAAUtilService.h"
#include "PPRUtity.h"

#include "CATApplicationFrame.h"
#include "CATCreateExternalObject.h"
CATCreateClass(CMMBOMFastenCmd);
//-----------------------------------------------------------------------------
// CMMBOMFastenCmd : constructor
//-----------------------------------------------------------------------------
CMMBOMFastenCmd::CMMBOMFastenCmd():CATStateCommand()
{
//
//TODO: Add the constructor code here
	_pDialogTransition = NULL;

	CATDlgWindow *pWnd = (CATApplicationFrame::GetFrame())->GetMainWindow();
	_Panel = new CMMBOMFastenDlg(pWnd, "Fasten Design");
	_Panel->Build();
	_Panel->SetFather(this);

	pManuAssemblyRef = NULL;
	pManuAssemblyOcc = NULL;
	pMARootRef = NULL;
	pMARootOcc = NULL;
	pProductRef = NULL;
	pProductOcc = NULL;
	sRModelExternalId = "";
	sRModelRevision = "";
	sSelectFastenName = "";
	sSelectFastenTitle = "";
	nFastenUsing = 0;
	sFastenUsing = "";

	pCheckFastenPairBtn = NULL;
	pFastenNameCombo = NULL;
	bPairAssign = FALSE;
	nSelectIndex = 1;


//
}

//-----------------------------------------------------------------------------
// CMMBOMFastenCmd : destructor
//-----------------------------------------------------------------------------

CMMBOMFastenCmd::~CMMBOMFastenCmd()
{
//
// TODO: Place code here.
	pManuAssemblyRef = NULL;
	pManuAssemblyOcc = NULL;
	pMARootRef = NULL;
	pMARootOcc = NULL;
	pProductRef = NULL;
	pProductOcc = NULL;
	bPairAssign = FALSE;
	pCheckFastenPairBtn = NULL;
	pFastenNameCombo = NULL;
//
}


void CMMBOMFastenCmd::BuildGraph()
{
	// TODO: Define the StateChart
	// ---------------------------
	// Define the selection agent
	_OKAgent = new CATDialogAgent("OK Agent");
	_OKAgent->AcceptOnNotify(_Panel, _Panel->GetDiaOKNotification());

	// Define the Cancel button agent
	//_ApplyAgent = new CATDialogAgent("Apply Agent");
	//_ApplyAgent->AcceptOnNotify(_Panel, _Panel->GetDiaAPPLYNotification());   //GetDiaAPPLYNotification     //GetDiaCANCELNotification 

	// Define the Close button agent
	_CloseAgent = new CATDialogAgent("Close Agent");
	_CloseAgent->AcceptOnNotify(_Panel, _Panel->GetWindCloseNotification());    //GetMDICloseNotification    //GetWindCloseNotification

	_CancleAgent = new CATDialogAgent("Cancle Agent");
	_CancleAgent->AcceptOnNotify(_Panel, _Panel->GetDiaCANCELNotification());
	// Define the selection agent 
	_pSelectAgent = new CATPathElementAgent("SelectionAgent");

	// Define the behaviors
	_pSelectAgent->SetBehavior(CATDlgEngWithCSO | CATDlgEngWithPrevaluation | CATDlgEngNewHSOManager);   //CATDlgEngMultiAcquisitionCtrl
	AddCSOClient(_pSelectAgent);

	// Define the states
	CATDialogState * pSelectionState = GetInitialState("ElementSelection");
	pSelectionState->AddDialogAgent(_OKAgent);
	pSelectionState->AddDialogAgent(_CloseAgent);
	//pSelectionState->AddDialogAgent(_ApplyAgent);
	pSelectionState->AddDialogAgent(_CancleAgent);
	pSelectionState->AddDialogAgent(_pSelectAgent);

	_pDialogTransition = AddTransition(pSelectionState, pSelectionState, IsOutputSetCondition(_pSelectAgent), Action((ActionMethod)&CMMBOMFastenCmd::ElementSelection, NULL, NULL, (void*)1));

	// Transition from Input state to NULL, when click on OK button
	AddTransition(pSelectionState, NULL, AndCondition(IsOutputSetCondition(_OKAgent), Condition((ConditionMethod)&CMMBOMFastenCmd::OKAction)), NULL);

	// Transition from Input state to NULL, when click on Close button
	AddTransition(pSelectionState, NULL, IsOutputSetCondition(_CloseAgent), Action((ActionMethod)&CMMBOMFastenCmd::CancelAction));

	AddTransition(pSelectionState, NULL, IsOutputSetCondition(_CancleAgent), Action((ActionMethod)&CMMBOMFastenCmd::CancelAction));

	pCheckFastenPairBtn = _Panel->GetCheckButton(ID_FastenPairCheckButton);
	AddAnalyseNotificationCB(pCheckFastenPairBtn, pCheckFastenPairBtn->GetChkBModifyNotification(),
		(CATCommandMethod)&CMMBOMFastenCmd::ChangeFastenPairChkBtn, NULL);

	pFastenNameCombo = _Panel->GetCombo(ID_FastenDetailCombo);
	AddAnalyseNotificationCB(pFastenNameCombo, pFastenNameCombo->GetComboSelectNotification(),
		(CATCommandMethod)&CMMBOMFastenCmd::ChangeFastenRemainNumber, NULL);

	pRemainNumberEditor = _Panel->GetEditor(ID_FastenNumberEditor);

	DRECT rect;
	CATBoolean iAlreadyScaled = false;
	_Panel->GetRectDimensionsEx(&rect, iAlreadyScaled);
	rect.x = 800;
	rect.y = 400;
	_Panel->SetRectDimensionsEx(rect, iAlreadyScaled);

	_Panel->SetVisibility(CATDlgShow);
}

CATBoolean CMMBOMFastenCmd::ChangeFastenPairChkBtn(void *data)
{
	if (pProductRef == NULL)
		return FALSE;

	CATUInt checkState = pCheckFastenPairBtn->GetState();
	if (checkState == CATDlgCheck)
		bPairAssign = TRUE;
	else
		bPairAssign = FALSE;

	pFastenNameCombo->ClearLine();
	pFastenNameCombo->SetLine("", 0);

	if(bPairAssign)
		CUSCAAUtilService::ShowComboValue(pFastenNameCombo, sFastenColletionNameList);
	else
		CUSCAAUtilService::ShowComboValue(pFastenNameCombo, sFastenSingleNameList);

	ChangeFastenRemainNumber(NULL);

	return TRUE;
}

CATBoolean CMMBOMFastenCmd::ChangeFastenRemainNumber(void *data)
{
	int nRemainNumber = 0;

	sSelectFastenName = CUSCAAUtilService::GetSelectComboValue(pFastenNameCombo);

	sFastenPartName = sRModelExternalId + splitNameChar + sRModelRevision + splitNameChar + sSelectFastenName;

	if (bPairAssign)
	{
		nSelectIndex = sFastenColletionNameList.Locate(sSelectFastenName);

		if (sFastenColletionTitleList.Size() >= nSelectIndex)
			sSelectFastenTitle = sFastenColletionTitleList[nSelectIndex];

		sFastenPartName = jointPairFastenName(sFastenColletionIndexNameList[nSelectIndex], splitFastenChar);

		nRemainNumber = sFastenColletionNumberList[nSelectIndex] - CalcFastenPairUsedWebService();
	}
	else
	{
		nSelectIndex = sFastenSingleNameList.Locate(sSelectFastenName);

		if (sFastenSingleTitleList.Size() >= nSelectIndex)
			sSelectFastenTitle = sFastenSingleTitleList[nSelectIndex];

		nRemainNumber = sFastenSingleNumberList[nSelectIndex] - CalcFastenUsedWebService();
	}

	CATUnicodeString sRemainNumber = "";
	sRemainNumber.BuildFromNum(nRemainNumber, "%d");
	pRemainNumberEditor->SetText(sRemainNumber);

	return TRUE;
}

CATBoolean CMMBOMFastenCmd::ElementSelection(void * data)
{
	CATBoolean returnCode = FALSE;

	int CaseAgent = CATPtrToINT32(data);

	// Check input data
	if (NULL != _pSelectAgent)
	{
		// Intialisation
		returnCode = TRUE;
		_pSelectedElement = NULL;
		// Get the selected Element
		CATPathElement * pPathElement = _pSelectAgent->GetValue();
		//pPathElement = _pSelectAgent->GetValue();
		if (NULL != pPathElement)
		{
			_pSelectedElement = pPathElement->FindElement(IID_CATBaseUnknown);
			//_pSelectedRepInstance = (CATIPLMNavRepInstance*)(pPathElement->FindElement(IID_CATIPLMNavRepInstance));
			_pSelectedOccurrence = (CATIPLMNavOccurrence*)(pPathElement->FindElement(IID_CATIPLMNavOccurrence));
			if (_pSelectedOccurrence) {
				_pSelectedOccurrence->GetRelatedReference(_pSelectedReference);
			}
		}
		_pSelectAgent->InitializeAcquisition();

		if (NULL != _pSelectedElement)
		{
			// Highlight the selected Element
			if (FAILED(CUSCAAUtilService::HighlightElement(_pSelectedOccurrence, _pSelectedRepInstance, _pSelectedElement)))
				returnCode = FALSE;

			FilterSelectObject();
		}
		else  returnCode = FALSE;
	}

	return returnCode;
}

CATBoolean CMMBOMFastenCmd::OKAction(void *data)
{
	if (_OKAgent)
	{
		_OKAgent->InitializeAcquisition();
	}

	if (pManuAssemblyRef == NULL) {
		CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.Title");
		CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.selectFastenFather");
		CUSCAAUtilService::ErrorMessage(Title, msg);
		return FALSE;
	}

	if (pProductRef == NULL) {
		CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.Title");
		CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.selectRModel");
		CUSCAAUtilService::ErrorMessage(Title, msg);
		return FALSE;
	}

	CATUnicodeString sSelectFastenName = CUSCAAUtilService::GetSelectComboValue(pFastenNameCombo);
	if (sSelectFastenName == "" || sFastenPartName == "") {
		CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.Title");
		CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.noContentRModel");
		CUSCAAUtilService::ErrorMessage(Title, msg);
		return FALSE;
	}


	CATDlgEditor *pUsingEditor = _Panel->GetEditor(ID_FastenUsingEditor);
	sFastenUsing = pUsingEditor->GetText();
	sFastenUsing.ConvertToNum(&nFastenUsing, "%d");
	if (nFastenUsing < 1) {
		CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.Title");
		CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.inputUsingFasten");
		CUSCAAUtilService::ErrorMessage(Title, msg);
		return FALSE;
	}

	HRESULT rc = E_FAIL;

	CATAdpSaver saver;
	CATListPtrCATBaseUnknown listRootRef;
	listRootRef.Append(pManuAssemblyRef);
	rc = saver.Save(&listRootRef);
	if (rc != S_OK)
	{
		CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.Title");
		CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.SaveFailed");
		CUSCAAUtilService::ErrorMessage(Title, msg);
		return FALSE;
	}

	pMARootOcc = CUSCAAUtilService::GetRootOcc(pManuAssemblyOcc);
	if (pMARootOcc != NULL)
	{
		pMARootOcc->GetRelatedReference(pMARootRef);
	}

	if (bPairAssign)
	{
		CATListOfCATUnicodeString listFastenName = CUSCAAUtilService::GetListStringValue(sFastenColletionIndexNameList[nSelectIndex], splitFastenChar);
		CATListOfCATUnicodeString listFastenTitle = CUSCAAUtilService::GetListStringValue(sFastenColletionIndexTitleList[nSelectIndex], splitFastenChar);
		for (int i = 1; i <= listFastenName.Size(); i++) 
		{
			sFastenPartName = sRModelExternalId + splitNameChar + sRModelRevision + splitNameChar + listFastenName[i];
			CrateManufacturingFasten(sFastenPartName, listFastenName[i], listFastenTitle[i]);
		}
	}
	else
		CrateManufacturingFasten(sFastenPartName,sSelectFastenName, sSelectFastenTitle);

	rc = saver.Save(&listRootRef);

	if (_Panel != NULL)  _Panel->SetVisibility(CATDlgHide);

	return TRUE;
}
CATBoolean CMMBOMFastenCmd::CancelAction(void *data)
{
	cout << "CMMBOMFastenCmd::CancelAction() - INFO: Entering CancelAction()... " << endl;

	if (_Panel != NULL)  _Panel->SetVisibility(CATDlgHide);

	return TRUE;
}
void CMMBOMFastenCmd::FilterSelectObject()
{
	CATUnicodeString sSelectObjectType = CUSCAAUtilService::GetObjectKnowledgeType(_pSelectedReference);

	if (sSelectObjectType == TYPE_MBOMAssembly)
	{
		pManuAssemblyRef = _pSelectedReference;
		pManuAssemblyOcc = _pSelectedOccurrence;
		CATDlgEditor *pMIDEditor = _Panel->GetEditor(ID_SelectManuAssemEditor);
		pMIDEditor->SetText(CUSCAAUtilService::GetObjectAttrValue(pManuAssemblyRef, "PLM_ExternalID"));
	}
	if (sSelectObjectType == TYPE_Product)
	{
		CATUnicodeString sExternalId = CUSCAAUtilService::GetObjectAttrValue(_pSelectedReference, "PLM_ExternalID");
		if (sExternalId.GetLengthInChar() < 14) {
			CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.Title");
			CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.selectRModel");
			CUSCAAUtilService::ErrorMessage(Title, msg);
		}
		else {
			CATUnicodeString subString = sExternalId.SubString(11, 3);
			int number = 0;
			subString.ConvertToNum(&number);
			if (number >= 300 && number <= 399)//R模型
			{
				pProductRef = _pSelectedReference;
				pProductOcc = _pSelectedOccurrence;
				CATDlgEditor *pRMEditor = _Panel->GetEditor(ID_SelectRModelEditor);
				pRMEditor->SetText(sExternalId);
				sRModelExternalId = sExternalId;
				sRModelRevision = CUSCAAUtilService::GetObjectAttrValue(pProductRef, "revision");

				ClearFastenData();
				HRESULT rc = ParseRModelValue();
				if (rc != S_OK) {
					CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.Title");
					CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.noContentRModel");
					CUSCAAUtilService::ErrorMessage(Title, msg);
				}
			}
			else {
				CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.Title");
				CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.selectRModel");
				CUSCAAUtilService::ErrorMessage(Title, msg);
			}
		}
	}
}

#include "CUSXMLServices.h"

HRESULT CMMBOMFastenCmd::ParseRModelValue()
{
	HRESULT rc = E_FAIL;
	CATUnicodeString fastenInfo = CUSCAAUtilService::GetObjectAttrValue(pProductRef, "CUS_PartFasteners");

	//CATUnicodeString fastenInfo2 = CUSCAAUtilService::GetAttributeValueFromList(pProductRef, "CUS_PartFasteners");

	CATIDOMDocument_var document;
	CATIXMLDOMDocumentBuilder_var ptrDOMBuilder = NULL_var;
	CUSXMLServices::ReadXmlStream(fastenInfo, document, ptrDOMBuilder);
	if (document == NULL_var) {
		cout << "XML document DOM access failed!" << endl;
		return S_FALSE;
	}

	CATUnicodeString sFastenTag = "Fastener";
	CATIDOMNodeList_var spFastenNodeList = NULL_var;
	rc = document->GetElementsByTagName(sFastenTag, spFastenNodeList);
	unsigned int nNodeLength = 0;
	rc = spFastenNodeList->GetLength(nNodeLength);
	if (nNodeLength != 1)
	{
		cout << "XML document error!" << endl;
		return E_FAIL;
	}

	CATIDOMNode_var spFastenNode = NULL_var;
	spFastenNodeList->Item(0, spFastenNode);

	CATIDOMNodeList_var spFastenGSSetNode = NULL_var;    //GS Collection
	spFastenNode->GetChildNodes(spFastenGSSetNode);
	rc = spFastenGSSetNode->GetLength(nNodeLength);
	if(nNodeLength == 0)
		return S_FALSE;

	for (int i = 0; i < nNodeLength; i++) {
		CATIDOMNode_var spGSSetNode = NULL_var;    
		spFastenGSSetNode->Item(i, spGSSetNode);

		CATIDOMNodeList_var spFastenGSListNode = NULL_var;
		spGSSetNode->GetChildNodes(spFastenGSListNode);

		unsigned int nGSList = 0;
		rc = spFastenGSListNode->GetLength(nGSList);
		sFastenColletionNumberList.Append(nGSList);

		CATIDOMNode_var spGSNode = NULL_var;    //GS
		spFastenGSListNode->Item(0, spGSNode);  

		CATUnicodeString sFastenColletionName = "";
		sFastenColletionName = CUSXMLServices::GetNodeValue(spGSNode,"NAME");
		sFastenColletionNameList.Append(sFastenColletionName);

		CATIDOMNodeList_var spGSMListNode = NULL_var;   //GSM
		spGSNode->GetChildNodes(spGSMListNode);
		CATUnicodeString sFastenColletionIndexName = "";
		CATUnicodeString sFastenColletionIndexTitle = "";
		unsigned int nGSMList = 0;
		rc = spGSMListNode->GetLength(nGSMList);
		for (int k = 0; k < nGSMList; k++) {
			CATIDOMNode_var spGSMNode = NULL_var;
			spGSMListNode->Item(k, spGSMNode);

			CATUnicodeString sFastenSingleName = "";
			sFastenSingleName = CUSXMLServices::GetNodeValue(spGSMNode, "NAME");
			int nIndex = sFastenSingleNameList.Locate(sFastenSingleName);
			if (nIndex <= 0) {   //紧固件不存在当前列表中
				sFastenSingleNameList.Append(sFastenSingleName);    //将紧固件名称添加进list
				sFastenSingleNumberList.Append(nGSList);    //
			}
			else {
				sFastenSingleNumberList[nIndex] += nGSList;    //存在相同的紧固件，则更新其数量
			}
			if (k == 0)
				sFastenColletionIndexName = sFastenSingleName;
			else
				sFastenColletionIndexName = sFastenSingleName + splitFastenChar + sFastenColletionIndexName;

			CATIDOMNodeList_var spParameterListNode = NULL_var;
			spGSMNode->GetChildNodes(spParameterListNode);
			unsigned int nParameterList = 0;
			rc = spParameterListNode->GetLength(nParameterList);
			CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"Fasten.Title");
			for (int j = 0; j < nParameterList; j++) {
				CATIDOMNode_var spParameterNode = NULL_var;
				spParameterListNode->Item(j, spParameterNode);
				CATUnicodeString sParamName = CUSXMLServices::GetNodeValue(spParameterNode, "NAME");
				if (Title == sParamName)
				{
					CATUnicodeString sFastenTitle = CUSXMLServices::GetNodeValue(spParameterNode, "VALUE");
					sFastenSingleTitleList.Append(sFastenTitle);
					if (j == 0)
						sFastenColletionIndexTitle = sFastenTitle;
					else
						sFastenColletionIndexTitle = sFastenTitle + splitFastenChar + sFastenColletionIndexTitle;
					if (sFastenColletionName == sFastenSingleName)
						sFastenColletionTitleList.Append(sFastenTitle);
					break;
				}
			}
		}
		sFastenColletionIndexList.Append(nGSMList);
		sFastenColletionIndexNameList.Append(sFastenColletionIndexName);
		sFastenColletionIndexTitleList.Append(sFastenColletionIndexTitle);
	}

	int nRemainNumber = 0;
	if (bPairAssign) {   //成套分配

		if (sFastenColletionNameList.Size() >= 1)
			sSelectFastenName = sFastenColletionNameList[1];
		if (sFastenColletionTitleList.Size() >= 1)
			sSelectFastenTitle = sFastenColletionTitleList[1];

		CUSCAAUtilService::ShowComboValue(pFastenNameCombo, sFastenColletionNameList);

		sFastenPartName = jointPairFastenName(sFastenColletionIndexNameList[1], splitFastenChar);

		nRemainNumber = sFastenColletionNumberList[1] - CalcFastenPairUsedWebService();
	}
	else {
		if (sFastenSingleNameList.Size() >= 1)
			sSelectFastenName = sFastenSingleNameList[1];
		if (sFastenSingleTitleList.Size() >= 1)
			sSelectFastenTitle = sFastenSingleTitleList[1];

		sFastenPartName = sRModelExternalId + splitNameChar + sRModelRevision + splitNameChar + sSelectFastenName;

		CUSCAAUtilService::ShowComboValue(pFastenNameCombo, sFastenSingleNameList);

		nRemainNumber = sFastenSingleNumberList[1] - CalcFastenUsedWebService();
	}

	CATUnicodeString sRemainNumber = "";
	sRemainNumber.BuildFromNum(nRemainNumber, "%d");
	pRemainNumberEditor->SetText(sRemainNumber);

	return S_OK;
}

CATUnicodeString CMMBOMFastenCmd::jointPairFastenName(CATUnicodeString sFastenPairList, CATUnicodeString splitChar)
{
	CATUnicodeString jointFastenName("");
	CATListOfCATUnicodeString listFastenName = CUSCAAUtilService::GetListStringValue(sFastenColletionIndexNameList[1], splitChar);
	for (int i = 1; i <= listFastenName.Size(); i++)
	{
		CATUnicodeString tempFastenName = sRModelExternalId + splitNameChar + sRModelRevision + splitNameChar + listFastenName[i];
		if (i == 1)
			jointFastenName = tempFastenName;
		else
			jointFastenName += splitChar + tempFastenName;
	}
	return jointFastenName;
}

int CMMBOMFastenCmd::CalcFastenUsedWebService()
{
	CATUnicodeString iServicePath = "/resource/CUSDELMIARestService/CUSDELMIAMBOMRestService/calcFastenUsed";
	CATUnicodeString iData = TYPE_MBOMFasten + "@@" + sFastenPartName + "@@" + "A.1";
	//CATUnicodeString sServerUrl = CATMsgCatalog::BuildMessage((CATString)"CMMBOMReportDlg", (CATString)"ServerUrl");

	CATUnicodeString sServerUrl = CUSCAAUtilService::GetServerURL();
	if (sServerUrl.IsNull())
	{
		CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMReportDlg", (CATString)"msg.Title");
		CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMReportDlg", (CATString)"msg.failedGetURL");
		CUSCAAUtilService::ErrorMessage(Title, msg);
		return 0;
	}
	CATUnicodeString iWebSite = sServerUrl + iServicePath;

	CATString oUserId, oOrganisationId, oProjectId, oRoleId;
	CATAdpPublicSecurityServices::GetSecurityParameters("", oUserId, oOrganisationId, oProjectId, oRoleId);

	CATUnicodeString SecurityContext = "SecurityContext: ctx::" + oRoleId + "." + oOrganisationId + "." + oProjectId;

	CATUnicodeString sTotalUsed = CUSCAAUtilService::WebService(SecurityContext, iWebSite + "?Object=" + iData);

	int nTotalUsed = 0;
	sTotalUsed.ConvertToNum(&nTotalUsed, "%d");

	return nTotalUsed;
}

int CMMBOMFastenCmd::CalcFastenPairUsedWebService()
{
	CATUnicodeString iServicePath = "/resource/CUSDELMIARestService/CUSDELMIAMBOMRestService/calcFastenPairUsed";
	CATUnicodeString sServerUrl = CATMsgCatalog::BuildMessage((CATString)"CMMBOMReportDlg", (CATString)"ServerUrl");
	//CUSCAAUtilService::RetrieveTxtFromDataSetup("ServerUrl", sServerUrl);
	if (sServerUrl.IsNull())
	{
		CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMReportDlg", (CATString)"msg.Title");
		CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMReportDlg", (CATString)"msg.failedGetURL");
		CUSCAAUtilService::ErrorMessage(Title, msg);
		return 0;
	}
	CATUnicodeString iWebSite = sServerUrl + iServicePath;

	CATString oUserId, oOrganisationId, oProjectId, oRoleId;
	CATAdpPublicSecurityServices::GetSecurityParameters("", oUserId, oOrganisationId, oProjectId, oRoleId);

	CATUnicodeString SecurityContext = "SecurityContext: ctx::" + oRoleId + "." + oOrganisationId + "." + oProjectId;

	CATUnicodeString sTotalUsed = CUSCAAUtilService::WebService(SecurityContext, iWebSite + "?Object=" + 
		sFastenPartName +"&type="+ TYPE_MBOMFasten+"&version=A.1");

	int nTotalUsed = 0;
	sTotalUsed.ConvertToNum(&nTotalUsed, "%d");

	return nTotalUsed;
}

int CMMBOMFastenCmd::CalcFastenUsed()
{
	int TotleUsed = 0;
	PPRUtity sPPRUtity;
	CATListPtrCATIPLMNavReference opilistIDComp;
	CUSCAAUtilService::GetObjReference(sFastenPartName, "", opilistIDComp, TYPE_MBOMFasten);
	int n_Size = opilistIDComp.Size();
	if (n_Size == 0)
		return TotleUsed;
	else if (n_Size > 1) {
		return TotleUsed;
	}
	
	CATIPLMNavReference * spFastenExistRef = opilistIDComp[1];
	CATListPtrCATIPLMNavInstance olistFastenInstance;
	spFastenExistRef->ListInstances(olistFastenInstance);
	int nInstance = olistFastenInstance.Size();
	for (int i = 1; i <= nInstance; i++) {
		CATIPLMNavInstance *spFastenInstance = olistFastenInstance[i];
		CATUnicodeString sFastenNumber = CUSCAAUtilService::GetObjectAttrValue(spFastenInstance, "CUS_FastenNumber");
		int nFastenNumber = 0;
		sFastenNumber.ConvertToNum(&nFastenNumber, "%d");
		TotleUsed += nFastenNumber;
	}

	return TotleUsed;
}


HRESULT CMMBOMFastenCmd::CrateManufacturingFasten(CATUnicodeString sFastenName, CATUnicodeString sFastenVName, CATUnicodeString sFastenDesc)
{
	PPRUtity sPPRUtity;
	CATListPtrCATIPLMNavReference opilistIDComp;
	HRESULT rc = CUSCAAUtilService::GetObjReference(sFastenName, "", opilistIDComp, TYPE_MBOMFasten);
	int n_Size = opilistIDComp.Size();

	CATIPLMNavOccurrence * spNewFastenOcc = NULL;
	if (n_Size >= 1) {
		rc = sPPRUtity.InsertExistProcess(pManuAssemblyOcc, opilistIDComp[1], pMARootRef, spNewFastenOcc);
		if (spNewFastenOcc == NULL)
		{
			CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.Title");
			CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.insertExistingError");
			CUSCAAUtilService::ErrorMessage(Title, msg);
			return rc;
		}
	}
	else {
		sPPRUtity.CreateSubMAAssembly(TYPE_MBOMFasten, pManuAssemblyOcc, pMARootRef, spNewFastenOcc);
		if (spNewFastenOcc == NULL)
		{
			CATUnicodeString Title = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.Title");
			CATUnicodeString msg = CATMsgCatalog::BuildMessage((CATString)"CMMBOMFastenDlg", (CATString)"msg.CreateFailed");
			CUSCAAUtilService::ErrorMessage(Title, msg);
			return rc;
		}

		CATIPLMNavReference *spNewFastenReference = NULL;
		spNewFastenOcc->GetRelatedReference(spNewFastenReference);

		CUSCAAUtilService::SetObjectAttrString(spNewFastenReference, "V_Name", sFastenVName);

		CUSCAAUtilService::SetObjectAttrString(spNewFastenReference, "name", sFastenName);

		CUSCAAUtilService::SetObjectAttrString(spNewFastenReference, "PLM_ExternalID", sFastenName);

		CUSCAAUtilService::SetObjectAttrString(spNewFastenReference, "V_description", sFastenDesc);

		CUSCAAUtilService::SetObjectAttrString(spNewFastenReference, "description", sFastenDesc);
	}

	if (spNewFastenOcc) {
		sPPRUtity.AssignProduct(spNewFastenOcc, pProductOcc);

		CATIPLMNavInstance *spNewFastenInstance = NULL;
		spNewFastenOcc->GetRelatedInstance(spNewFastenInstance);
		CUSCAAUtilService::SetObjectAttrString(spNewFastenInstance, "CUS_FastenNumber", sFastenUsing);
		CUSCAAUtilService::SetObjectAttrString(spNewFastenInstance, "CUS_RelatedRModel", sRModelExternalId);
		CUSCAAUtilService::SetObjectAttrString(spNewFastenInstance, "PLM_ExternalID", sFastenVName);
	}
	
	return rc;
}

void CMMBOMFastenCmd::ClearFastenData()
{
	pFastenNameCombo->ClearLine();
	pFastenNameCombo->SetLine("", 0);
	pRemainNumberEditor->SetText("");
	sFastenPartName = "";
	sFastenSingleNameList.RemoveAll();
	sFastenSingleTitleList.RemoveAll();
	sFastenSingleNumberList.RemoveAll();

	sFastenColletionNameList.RemoveAll();
	sFastenColletionTitleList.RemoveAll();
	sFastenColletionNumberList.RemoveAll();
	sFastenColletionIndexList.RemoveAll();
	sFastenColletionIndexNameList.RemoveAll();
	sFastenColletionIndexTitleList.RemoveAll();
}


