//===================================================================
// COPYRIGHT  2020/09/27
//===================================================================
// CMCreateMBOMAssembly.cpp
// Header definition of class CMCreateMBOMAssembly
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2020/09/27 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef CMCreateMBOMAssemCmd_H
#define CMCreateMBOMAssemCmd_H

#include "ProcessPlanningService.h"
#include "CATStateCommand.h"

#include "CMMBOMAssemDlg.h"
#include "CMMBOMAssemListDlg.h"

#include "CATSysBoolean.h"
#include "CATDialogAgent.h"
#include "CATDlgPushButton.h"

#include "iostream.h"

#include "CMSystemAODlg.h"
#include "CATPathElementAgent.h"

//CATPLMComponentInterfaces 
#include "CATIPLMNavReference.h"
#include "CATIPLMNavOccurrence.h"
#include "CATIPLMNavRepInstance.h"


//VisualizationInterfaces 
#include "CATPathElement.h"
#include "CATListPtrCATIAdpPLMIdentificator.h"
#include "CATListPtrCATIPLMNavReference.h"
//-----------------------------------------------------------------------

class CMCreateMBOMAssemCmd:public CATStateCommand
{
	DeclareResource(CMCreateMBOMAssemCmd, CATStateCommand)

public:
// Standard constructors and destructors
// -------------------------------------
CMCreateMBOMAssemCmd();
virtual ~CMCreateMBOMAssemCmd();

//
// TODO: Add your methods for this class here.
virtual void     BuildGraph();

/**
* Action associated to state transitions.
*/
virtual CATBoolean  ActionOne(void * data);

virtual CATBoolean  OKListAction(void * data);

virtual CATBoolean OKAction(void *data);

virtual CATBoolean ApplyAction(void *data);

virtual CATBoolean CancelAction(void *data);

CATBoolean ElementSelection(void * data);

//void ShowComboValue(int iCtrlID, CATUnicodeString sNlsValue);

HRESULT CrateMBOMAssembly();

void DisplayComponentNumber();

//CATBoolean CheckInputCode();

CATBoolean CheckSelectObject();

CATBoolean ChangeRadioNotifyInput(void *data);

CATBoolean ChangeRadioNotifyCopy(void *data);

void FilterSelectObject();

private:
// Copy constructor and equal operator
// -----------------------------------
	CMCreateMBOMAssemCmd(CMCreateMBOMAssemCmd &);
	CMCreateMBOMAssemCmd& operator=(CMCreateMBOMAssemCmd&);


	CMMBOMAssemDlg *_Panel;

	CMMBOMAssemListDlg *_ListPanel;

	CATDialogAgent *_OKAgent;
	CATDialogAgent *_OKListAgent;
	CATDialogAgent *_ApplyAgent;
	CATDialogAgent *_CloseAgent;
	CATDialogAgent *_CancleAgent;

	CATPathElementAgent *_pSelectAgent;

	CATDlgPushButton *_pListCodePushButton;

	CATDlgRadioButton *_pRadioBtnCopy;
	CATDlgRadioButton *_pRadioBtnInput;

	CATBaseUnknown        * _pSelectedElement;
	CATIPLMNavOccurrence  * _pSelectedOccurrence;
	CATIPLMNavRepInstance * _pSelectedRepInstance;
	CATIPLMNavReference   * _pSelectedReference;

	CATIPLMNavReference * pCADFatherProductRef;
	CATIPLMNavReference * pCADProductRef;
	CATIPLMNavOccurrence * pCADProductOcc;
	CATIPLMNavInstance * pCADProductInstance;

	CATIPLMNavOccurrence * pMAFatherOcc;
	CATIPLMNavReference * pMAFatherRef;

	CATIPLMNavOccurrence * pManuAssemOcc;
	CATIPLMNavReference * pManuAssemRef;

	CATIPLMNavOccurrence * pMARootOcc;
	CATIPLMNavReference * pMARootRef;

};

//-----------------------------------------------------------------------

#endif
