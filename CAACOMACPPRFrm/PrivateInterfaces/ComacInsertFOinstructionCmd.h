//===================================================================
// COPYRIGHT  2020/09/27
//===================================================================
// ComacInsertFOinstructionCmd.cpp
// Header definition of class ComacInsertFOinstructionCmd
//===================================================================
//
// Usage notes:
//
//===================================================================
//  2020/09/27 Creation: Code generated by the 3DS wizard
//===================================================================

#ifndef ComacInsertFOinstructionCmd_H
#define ComacInsertFOinstructionCmd_H

//#include "ProcessPlanningService.h"
#include "CATStateCommand.h"

#include "ComacInsertFOinstructionDlg.h"
#include "CATPathElementAgent.h"

//CATPLMComponentInterfaces 
#include "CATIPLMNavReference.h"
#include "CATIPLMNavOccurrence.h"
#include "CATIPLMNavRepInstance.h"
#include "CATIPLMNavInstance.h"
#include "CATIPLMNavRepInstance.h"
#include "CATIPLMNavReference.h"
#include "CATIPLMNavEntity.h"
#include "CATListPtrCATIPLMNavEntity.h"

// CAT3DPhysicalRepInterfaces Framework
#include "CATIPsiRepresentationLoadMode.h"

#include "CATSysBoolean.h"
#include "CATDialogAgent.h"

//VisualizationInterfaces 
#include "CATPathElement.h"



#include "iostream.h"
#include "CATListPtrCATIAdpPLMIdentificator.h"
#include "CATListPtrCATIPLMNavReference.h"

// 添加包
// ObjectModelerBase Framework
#include "CATOmbLifeCycleRootsBag.h"

// KnowledgeInterfaces Framework
#include "CATITypeDictionary.h"
//CATPLMIntegrationAccess
#include "CATAdpAttributeSet.h"

//MecModInterfaces Framework
#include "CATIMmiPrtContainer.h"
#include "CATIMmiMechanicalFeature.h"


//CATPLMIdentificationAccess Framework
#include "CATPLMCoreType.h"

//ObjectSpecsModeler Framework
#include "CATIPartRequest.h"

// CATPLMComponentInterfaces Framework
#include "CATIPLMNavInstance.h"
#include "CATIPLMNavRepInstance.h"
#include "CATIPLMNavReference.h"
#include "CATIPLMNavRepReference.h"
#include "CATIPLMNavEntity.h"
#include "CATListPtrCATIPLMNavEntity.h"

// CAT3DPhysicalRepInterfaces Framework
#include "CATIPsiRepresentationLoadMode.h"

// System Framework
#include "CATBaseUnknown.h"
#include "CATUnicodeString.h"

// others
#include "PPRUtity.h"

//MecModInterfaces Framework
#include "CATIPartRequest.h"

#include "CATIMmiUseBodyContent.h"
#include "CATIAlias.h"      // to retrieve a specific body 

#include "CATLISTV_CATBaseUnknown.h" 

#include "CATString.h"


//System Framewrks
#include "CATBoolean.h"
#include "CATUnicodeString.h"
#include "iostream.h"


#include "CATDlgCheckButton.h"

#define nAsciiCharA 65
#define nAsciiCharZ 90


//-----------------------------------------------------------------------

#define _RETURN_IF_FAILED_(hr, message) \
	if (FAILED(hr)) \
		{ cout << "=== FAILED ===> " << message << endl; return 1; } else	{	cout << "=== OK ===> " << message << endl; }

#define _RETURN_IF_TRUE_(ret, message) \
	if (ret) \
		{ cout << "=== FAILED ===> " << message << endl; return ret; } else	{	cout << "=== OK ===> " << message << endl; }

	struct  OpNameSplitInfo
	{
		CATUnicodeString	 sNamePreffixAlpha;				// 010
		int					 nNamePreffixNumber;			// 10
		bool				 bSuffix;						// 是否带后缀
		int					 nSuffixABC;					// 后缀 A ，对应65，初始为-1；

		OpNameSplitInfo(CATUnicodeString isNamePreffixAlpha, int inNamePreffixNumber, bool ibSuffix, int nSuffixABC)
		{
			sNamePreffixAlpha   = isNamePreffixAlpha;
			nNamePreffixNumber  = inNamePreffixNumber;
			bSuffix				= ibSuffix;
			nSuffixABC			= nSuffixABC;
		}
	};


class ComacInsertFOinstructionCmd : public CATStateCommand
{
	DeclareResource(ComacInsertFOinstructionCmd, CATStateCommand)
public:
	// Standard constructors and destructors
	// -------------------------------------
	ComacInsertFOinstructionCmd();
	virtual ~ComacInsertFOinstructionCmd();
	void BuildGraph();

	//
	// TODO: Add your methods for this class here.
	virtual CATBoolean  ActionOne(void * data);

	virtual CATBoolean OKAction(void *data);

	virtual CATBoolean ApplyAction(void *data);

	virtual CATBoolean CancelAction(void *data);

	CATBoolean ElementSelection(void * data);

	void FilterSelectObject();

	//   fengy 2021.12.15  InsertFOinstruction
	HRESULT InsertFOinstruction();
	
	CATBoolean CheckSelectObject();

	//   fengy 2021.12.30  IsOPTitleExisted
	bool  IsOPTitleExisted(CATUnicodeString iStrTitle, CATIPLMNavReference * ipFO_OPFatherRef);

	// fengy 2022.1.4 找到后续的节点-A不重复的节点！
	CATUnicodeString findDifferTitle(CATUnicodeString isFormatCode, CATListOfCATUnicodeString iTitlList);

	CATBoolean ChangeChkBtn(void *data);

	// fengy 2022.1.5 create one op  intruction
	// ipFO_OPFatherRef  : 父级 workplan
	void CreateOneOPInstruction(CATIPLMNavOccurrence *ipFO_OPFatherOcc, CATIPLMNavReference* ipFO_OPFatherRef, CATUnicodeString istrRefsuffix, CATUnicodeString istrInstsuffix);

	//fengy 2022.1.6 op name 是否符合规则
	bool ifNameConformToRule(CATUnicodeString isStartingOprationName, OpNameSplitInfo &onfoOpName);

	// fengy 2022.1.7 整合复用 for 是否重复创建 op 、 instruction
	HRESULT startCreateAction(CATListOfCATUnicodeString istrExistedOPTitleList,
								int inOPNamePreffixNumber,
								bool ibSuffix,
								int inSuffixABC,
								int inOPCount,
								int inOPstep);

private:
	// Copy constructor and equal operator
	// -----------------------------------
	ComacInsertFOinstructionCmd(ComacInsertFOinstructionCmd &);
	ComacInsertFOinstructionCmd& operator=(ComacInsertFOinstructionCmd&);

	PPRUtity spPPRUtity;

	ComacInsertFOinstructionDlg * _Panel;
	CATDlgCheckButton			* _pCheckBtn;
	CATBoolean					 _bConCurrentDesign/* = FALSE*/;			// 并行工序


	// agent
	CATDialogAgent *_OKAgent;
	CATDialogAgent *_ApplyAgent;
	CATDialogAgent *_CancleAgent;
	CATDialogAgent *_CloseAgent;

	CATPathElementAgent *_pSelectAgent;
	
	CATBaseUnknown        * _pSelectedElement;
	CATIPLMNavOccurrence  * _pSelectedOccurrence;
	CATIPLMNavRepInstance * _pSelectedRepInstance;
	CATIPLMNavReference   * _pSelectedReference;

	// ========= tmp ======= 
	//CATIPLMNavInstance	  * pProductInstance;
	//CATUnicodeString	    _strMAExternal_ID;

	//CATIPLMNavReference *pMASelectedRef;
	//CATIPLMNavOccurrence *pMASelectedOcc;

	// ========= ComacInsertFOinstructionCmd ======= 
	CATIPLMNavReference		*pFO_OPStartingRef;
	CATIPLMNavOccurrence	*pFO_OPStartingOcc;

	CATIPLMNavReference		*pFO_OPFatherRef;
	CATIPLMNavOccurrence	*pFO_OPFatherOcc;

	CATListOfCATUnicodeString  _strListOPReftitle;						// 插入前的OP ref title
	CATListOfCATUnicodeString  _strListOPInsttitle;						// 插入前的OP inst title

};

//-----------------------------------------------------------------------

#endif
